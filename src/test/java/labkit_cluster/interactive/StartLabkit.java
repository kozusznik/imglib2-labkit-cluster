package labkit_cluster.interactive;

import java.io.File;

import net.imglib2.labkit.LabkitFrame;
import net.imglib2.labkit.inputimage.InputImage;
import net.imglib2.labkit.inputimage.SpimDataInputImage;
import net.imglib2.labkit.models.DefaultSegmentationModel;

import org.scijava.Context;
import org.scijava.parallel.ParallelizationParadigm;

import cz.it4i.parallel.utils.TestParadigm;

/**
 * Starts Labkit, with a special segmentation algorithm, that
 * connects to an ImageJ-Server to perform the segmentation.
 */
public class StartLabkit
{
	public static void main(String... args) {
		final String fiji = fileExists("/home/arzt/Applications/Fiji.app/ImageJ-linux64");
		// To run this example:
		// 1. FIJI needs to be installed on the computer.
		// 2. The jar file "imglib2-labkit-cluster-{version}.jar" generated by "mvn package" needs
		//    to be copied to the FIJI jar folder.
		final String filename = fileExists("/home/arzt/Documents/Datasets/T1-Head-HDF5/export.xml");
		// To get a big data viewer dataset:
		// 1. Open and 3d gray scale image in FIJI. For example: File > Open Samples > T1 Head.
		// 2. Run: Plugins > BigDataViewer > Export Current Image as XML/HDF5.

		final Context context = new Context();
		final ParallelizationParadigm paradigm = TestParadigm.localImageJServer( fiji, context );
//		final ParallelizationParadigm paradigm = new TestParadigm( new InProcessImageJServerRunner(context), context );
		Runtime.getRuntime().addShutdownHook( new Thread( paradigm::close ) );
		final InputImage inputImage = new SpimDataInputImage( filename, 0 );
		DefaultSegmentationModel segmentationModel = new DefaultSegmentationModel( inputImage, context,
				( c, i ) -> new SciJavaParallelSegmenter( c, i, filename, paradigm ) );
		LabkitFrame.show(segmentationModel, "Demonstrate SciJava-Parallel used for Segmentation");

		// Open Classifier
		final String classifier = fileExists("/home/arzt/Documents/Datasets/T1-Head-HDF5/example.classifier");
		segmentationModel.selectedSegmenter().get().openModel( classifier );
		segmentationModel.selectedSegmenter().notifier().notifyListeners();
	}

	private static String fileExists( String path )
	{
		if(!new File( path ).exists())
			throw new RuntimeException( "File doesn't exist: " + path );
		else
			return path;
	}
}
